[metadata]
description-file = README.md
name = jammato
version = 3.0.0
license = cc
description = A library for mapping metadata attributes from proprietary file format schemas to a json schema document.
author = Nicolas Blumenroehr
author_email = nicolas.blumenroehr@gmail.com
url = https://github.com/user/nicolasblumenroehr
download_url = https://github.com/kit-data-manager/JaMMaTo/archive/refs/tags/JaMMaTo-3.0.0.tar.gz
keywords = [Schema, Mapping, DICOM, JSON]
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: End Users/Desktop
    Topic :: Software Development :: Build Tools
    License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication
    Programming Language :: Python :: 3

[options]
packages = jammato
install_requires =
    logging
    pydicom
    jsonschema
    datetime
    typing
    zipfile
    
python_requires = >=3.8
package_dir =
    =.
zip_safe = no

[options.extras_require]
testing =
    pytest
    codecov
    pytest-cov
    pre-commit
    pytest-benchmark
    tox
    pylint
    flake8
    mypy
    isort
    black
    pre-commit
    autopep8

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[coverage:paths]
source = JaMMaTo/*

[coverage:html]
directory = reports

[coverage:run]
branch = True
parallel = True
omit =
    setup.py
    JaMMaTo/__init__.py
    JaMMaTo/version.py
    JaMMaTo/performance.py
    JaMMaTo/test.py

[isort]
sections =
    FUTURE,
    STDLIB,
    THIRDPARTY,
    FIRSTPARTY,
    LOCALFOLDER
default_section = LOCALFOLDER
known_third_party =
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy
multi_line_output = 3
lines_after_imports = 2
force_single_line = True
use_parentheses = True
ensure_newline_before_comments = True
line_length = 80


[flake8]
exclude = .git,__pycache__,docs,old,build,dist
max-complexity = 30
max-line-length = 120
ignore=W504,F401,E402,E266,E203,W503,C408,C416,B001


[mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
follow_imports = silent
check_untyped_defs = false
disallow_incomplete_defs = true
disallow_untyped_defs = false
disallow_subclassing_any = false
strict_optional = false
no_implicit_optional = false
warn_no_return = true
warn_unreachable = true


[pylint.config]
[MASTER]

extension-pkg-whitelist=
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy

[MESSAGES CONTROL]

disable=R,C
enable=E,W
jobs=1
confidence=HIGH

[FORMAT]

max-line-length = 120
max-module-lines = 2000
